/*
FiveWest Client API

API Documentation for FiveWest's wallet and RfQ trading services. Please visit dashboard.fivewest.co.za to sign up. Once your account has been verified to the sufficient level necessary for the given service, you can create an API key and secret with fine-grained service permissions in the 'API Management' section of the 'Profile' tab. These credentials must be provided in the /profile/api/v1/auth/token route in order to acquire a JWT to make further requests with. This JWT is valid for one week; the credentials do not expire but may be deleted.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fivewestapi

import (
	"encoding/json"
)

// checks if the PayInstructions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PayInstructions{}

// PayInstructions struct for PayInstructions
type PayInstructions struct {
	Destination NullableDepositAddress `json:"destination,omitempty"`
	BpayQrContent NullableString `json:"bpay_qr_content,omitempty"`
	BpayCheckoutUrl NullableString `json:"bpay_checkout_url,omitempty"`
	BpayDeeplink NullableString `json:"bpay_deeplink,omitempty"`
	BpayUniversalUrl NullableString `json:"bpay_universal_url,omitempty"`
}

// NewPayInstructions instantiates a new PayInstructions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayInstructions() *PayInstructions {
	this := PayInstructions{}
	return &this
}

// NewPayInstructionsWithDefaults instantiates a new PayInstructions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPayInstructionsWithDefaults() *PayInstructions {
	this := PayInstructions{}
	return &this
}

// GetDestination returns the Destination field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PayInstructions) GetDestination() DepositAddress {
	if o == nil || IsNil(o.Destination.Get()) {
		var ret DepositAddress
		return ret
	}
	return *o.Destination.Get()
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PayInstructions) GetDestinationOk() (*DepositAddress, bool) {
	if o == nil {
		return nil, false
	}
	return o.Destination.Get(), o.Destination.IsSet()
}

// HasDestination returns a boolean if a field has been set.
func (o *PayInstructions) HasDestination() bool {
	if o != nil && o.Destination.IsSet() {
		return true
	}

	return false
}

// SetDestination gets a reference to the given NullableDepositAddress and assigns it to the Destination field.
func (o *PayInstructions) SetDestination(v DepositAddress) {
	o.Destination.Set(&v)
}
// SetDestinationNil sets the value for Destination to be an explicit nil
func (o *PayInstructions) SetDestinationNil() {
	o.Destination.Set(nil)
}

// UnsetDestination ensures that no value is present for Destination, not even an explicit nil
func (o *PayInstructions) UnsetDestination() {
	o.Destination.Unset()
}

// GetBpayQrContent returns the BpayQrContent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PayInstructions) GetBpayQrContent() string {
	if o == nil || IsNil(o.BpayQrContent.Get()) {
		var ret string
		return ret
	}
	return *o.BpayQrContent.Get()
}

// GetBpayQrContentOk returns a tuple with the BpayQrContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PayInstructions) GetBpayQrContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BpayQrContent.Get(), o.BpayQrContent.IsSet()
}

// HasBpayQrContent returns a boolean if a field has been set.
func (o *PayInstructions) HasBpayQrContent() bool {
	if o != nil && o.BpayQrContent.IsSet() {
		return true
	}

	return false
}

// SetBpayQrContent gets a reference to the given NullableString and assigns it to the BpayQrContent field.
func (o *PayInstructions) SetBpayQrContent(v string) {
	o.BpayQrContent.Set(&v)
}
// SetBpayQrContentNil sets the value for BpayQrContent to be an explicit nil
func (o *PayInstructions) SetBpayQrContentNil() {
	o.BpayQrContent.Set(nil)
}

// UnsetBpayQrContent ensures that no value is present for BpayQrContent, not even an explicit nil
func (o *PayInstructions) UnsetBpayQrContent() {
	o.BpayQrContent.Unset()
}

// GetBpayCheckoutUrl returns the BpayCheckoutUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PayInstructions) GetBpayCheckoutUrl() string {
	if o == nil || IsNil(o.BpayCheckoutUrl.Get()) {
		var ret string
		return ret
	}
	return *o.BpayCheckoutUrl.Get()
}

// GetBpayCheckoutUrlOk returns a tuple with the BpayCheckoutUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PayInstructions) GetBpayCheckoutUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BpayCheckoutUrl.Get(), o.BpayCheckoutUrl.IsSet()
}

// HasBpayCheckoutUrl returns a boolean if a field has been set.
func (o *PayInstructions) HasBpayCheckoutUrl() bool {
	if o != nil && o.BpayCheckoutUrl.IsSet() {
		return true
	}

	return false
}

// SetBpayCheckoutUrl gets a reference to the given NullableString and assigns it to the BpayCheckoutUrl field.
func (o *PayInstructions) SetBpayCheckoutUrl(v string) {
	o.BpayCheckoutUrl.Set(&v)
}
// SetBpayCheckoutUrlNil sets the value for BpayCheckoutUrl to be an explicit nil
func (o *PayInstructions) SetBpayCheckoutUrlNil() {
	o.BpayCheckoutUrl.Set(nil)
}

// UnsetBpayCheckoutUrl ensures that no value is present for BpayCheckoutUrl, not even an explicit nil
func (o *PayInstructions) UnsetBpayCheckoutUrl() {
	o.BpayCheckoutUrl.Unset()
}

// GetBpayDeeplink returns the BpayDeeplink field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PayInstructions) GetBpayDeeplink() string {
	if o == nil || IsNil(o.BpayDeeplink.Get()) {
		var ret string
		return ret
	}
	return *o.BpayDeeplink.Get()
}

// GetBpayDeeplinkOk returns a tuple with the BpayDeeplink field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PayInstructions) GetBpayDeeplinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BpayDeeplink.Get(), o.BpayDeeplink.IsSet()
}

// HasBpayDeeplink returns a boolean if a field has been set.
func (o *PayInstructions) HasBpayDeeplink() bool {
	if o != nil && o.BpayDeeplink.IsSet() {
		return true
	}

	return false
}

// SetBpayDeeplink gets a reference to the given NullableString and assigns it to the BpayDeeplink field.
func (o *PayInstructions) SetBpayDeeplink(v string) {
	o.BpayDeeplink.Set(&v)
}
// SetBpayDeeplinkNil sets the value for BpayDeeplink to be an explicit nil
func (o *PayInstructions) SetBpayDeeplinkNil() {
	o.BpayDeeplink.Set(nil)
}

// UnsetBpayDeeplink ensures that no value is present for BpayDeeplink, not even an explicit nil
func (o *PayInstructions) UnsetBpayDeeplink() {
	o.BpayDeeplink.Unset()
}

// GetBpayUniversalUrl returns the BpayUniversalUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PayInstructions) GetBpayUniversalUrl() string {
	if o == nil || IsNil(o.BpayUniversalUrl.Get()) {
		var ret string
		return ret
	}
	return *o.BpayUniversalUrl.Get()
}

// GetBpayUniversalUrlOk returns a tuple with the BpayUniversalUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PayInstructions) GetBpayUniversalUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BpayUniversalUrl.Get(), o.BpayUniversalUrl.IsSet()
}

// HasBpayUniversalUrl returns a boolean if a field has been set.
func (o *PayInstructions) HasBpayUniversalUrl() bool {
	if o != nil && o.BpayUniversalUrl.IsSet() {
		return true
	}

	return false
}

// SetBpayUniversalUrl gets a reference to the given NullableString and assigns it to the BpayUniversalUrl field.
func (o *PayInstructions) SetBpayUniversalUrl(v string) {
	o.BpayUniversalUrl.Set(&v)
}
// SetBpayUniversalUrlNil sets the value for BpayUniversalUrl to be an explicit nil
func (o *PayInstructions) SetBpayUniversalUrlNil() {
	o.BpayUniversalUrl.Set(nil)
}

// UnsetBpayUniversalUrl ensures that no value is present for BpayUniversalUrl, not even an explicit nil
func (o *PayInstructions) UnsetBpayUniversalUrl() {
	o.BpayUniversalUrl.Unset()
}

func (o PayInstructions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PayInstructions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Destination.IsSet() {
		toSerialize["destination"] = o.Destination.Get()
	}
	if o.BpayQrContent.IsSet() {
		toSerialize["bpay_qr_content"] = o.BpayQrContent.Get()
	}
	if o.BpayCheckoutUrl.IsSet() {
		toSerialize["bpay_checkout_url"] = o.BpayCheckoutUrl.Get()
	}
	if o.BpayDeeplink.IsSet() {
		toSerialize["bpay_deeplink"] = o.BpayDeeplink.Get()
	}
	if o.BpayUniversalUrl.IsSet() {
		toSerialize["bpay_universal_url"] = o.BpayUniversalUrl.Get()
	}
	return toSerialize, nil
}

type NullablePayInstructions struct {
	value *PayInstructions
	isSet bool
}

func (v NullablePayInstructions) Get() *PayInstructions {
	return v.value
}

func (v *NullablePayInstructions) Set(val *PayInstructions) {
	v.value = val
	v.isSet = true
}

func (v NullablePayInstructions) IsSet() bool {
	return v.isSet
}

func (v *NullablePayInstructions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayInstructions(val *PayInstructions) *NullablePayInstructions {
	return &NullablePayInstructions{value: val, isSet: true}
}

func (v NullablePayInstructions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayInstructions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


