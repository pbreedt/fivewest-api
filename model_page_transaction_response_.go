/*
FiveWest Client API

API Documentation for FiveWest's wallet and RfQ trading services. Please visit dashboard.fivewest.co.za to sign up. Once your account has been verified to the sufficient level necessary for the given service, you can create an API key and secret with fine-grained service permissions in the 'API Management' section of the 'Profile' tab. These credentials must be provided in the /profile/api/v1/auth/token route in order to acquire a JWT to make further requests with. This JWT is valid for one week; the credentials do not expire but may be deleted.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fivewestapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PageTransactionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PageTransactionResponse{}

// PageTransactionResponse struct for PageTransactionResponse
type PageTransactionResponse struct {
	Items []TransactionResponse `json:"items"`
	Total int32 `json:"total"`
	Pages int32 `json:"pages"`
	PageSize int32 `json:"page_size"`
	HasNext *bool `json:"has_next,omitempty"`
	HasPrev *bool `json:"has_prev,omitempty"`
}

type _PageTransactionResponse PageTransactionResponse

// NewPageTransactionResponse instantiates a new PageTransactionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPageTransactionResponse(items []TransactionResponse, total int32, pages int32, pageSize int32) *PageTransactionResponse {
	this := PageTransactionResponse{}
	this.Items = items
	this.Total = total
	this.Pages = pages
	this.PageSize = pageSize
	var hasNext bool = false
	this.HasNext = &hasNext
	var hasPrev bool = false
	this.HasPrev = &hasPrev
	return &this
}

// NewPageTransactionResponseWithDefaults instantiates a new PageTransactionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPageTransactionResponseWithDefaults() *PageTransactionResponse {
	this := PageTransactionResponse{}
	var hasNext bool = false
	this.HasNext = &hasNext
	var hasPrev bool = false
	this.HasPrev = &hasPrev
	return &this
}

// GetItems returns the Items field value
func (o *PageTransactionResponse) GetItems() []TransactionResponse {
	if o == nil {
		var ret []TransactionResponse
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *PageTransactionResponse) GetItemsOk() ([]TransactionResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *PageTransactionResponse) SetItems(v []TransactionResponse) {
	o.Items = v
}

// GetTotal returns the Total field value
func (o *PageTransactionResponse) GetTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *PageTransactionResponse) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *PageTransactionResponse) SetTotal(v int32) {
	o.Total = v
}

// GetPages returns the Pages field value
func (o *PageTransactionResponse) GetPages() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Pages
}

// GetPagesOk returns a tuple with the Pages field value
// and a boolean to check if the value has been set.
func (o *PageTransactionResponse) GetPagesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pages, true
}

// SetPages sets field value
func (o *PageTransactionResponse) SetPages(v int32) {
	o.Pages = v
}

// GetPageSize returns the PageSize field value
func (o *PageTransactionResponse) GetPageSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value
// and a boolean to check if the value has been set.
func (o *PageTransactionResponse) GetPageSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageSize, true
}

// SetPageSize sets field value
func (o *PageTransactionResponse) SetPageSize(v int32) {
	o.PageSize = v
}

// GetHasNext returns the HasNext field value if set, zero value otherwise.
func (o *PageTransactionResponse) GetHasNext() bool {
	if o == nil || IsNil(o.HasNext) {
		var ret bool
		return ret
	}
	return *o.HasNext
}

// GetHasNextOk returns a tuple with the HasNext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageTransactionResponse) GetHasNextOk() (*bool, bool) {
	if o == nil || IsNil(o.HasNext) {
		return nil, false
	}
	return o.HasNext, true
}

// HasHasNext returns a boolean if a field has been set.
func (o *PageTransactionResponse) HasHasNext() bool {
	if o != nil && !IsNil(o.HasNext) {
		return true
	}

	return false
}

// SetHasNext gets a reference to the given bool and assigns it to the HasNext field.
func (o *PageTransactionResponse) SetHasNext(v bool) {
	o.HasNext = &v
}

// GetHasPrev returns the HasPrev field value if set, zero value otherwise.
func (o *PageTransactionResponse) GetHasPrev() bool {
	if o == nil || IsNil(o.HasPrev) {
		var ret bool
		return ret
	}
	return *o.HasPrev
}

// GetHasPrevOk returns a tuple with the HasPrev field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageTransactionResponse) GetHasPrevOk() (*bool, bool) {
	if o == nil || IsNil(o.HasPrev) {
		return nil, false
	}
	return o.HasPrev, true
}

// HasHasPrev returns a boolean if a field has been set.
func (o *PageTransactionResponse) HasHasPrev() bool {
	if o != nil && !IsNil(o.HasPrev) {
		return true
	}

	return false
}

// SetHasPrev gets a reference to the given bool and assigns it to the HasPrev field.
func (o *PageTransactionResponse) SetHasPrev(v bool) {
	o.HasPrev = &v
}

func (o PageTransactionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PageTransactionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["items"] = o.Items
	toSerialize["total"] = o.Total
	toSerialize["pages"] = o.Pages
	toSerialize["page_size"] = o.PageSize
	if !IsNil(o.HasNext) {
		toSerialize["has_next"] = o.HasNext
	}
	if !IsNil(o.HasPrev) {
		toSerialize["has_prev"] = o.HasPrev
	}
	return toSerialize, nil
}

func (o *PageTransactionResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"items",
		"total",
		"pages",
		"page_size",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPageTransactionResponse := _PageTransactionResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPageTransactionResponse)

	if err != nil {
		return err
	}

	*o = PageTransactionResponse(varPageTransactionResponse)

	return err
}

type NullablePageTransactionResponse struct {
	value *PageTransactionResponse
	isSet bool
}

func (v NullablePageTransactionResponse) Get() *PageTransactionResponse {
	return v.value
}

func (v *NullablePageTransactionResponse) Set(val *PageTransactionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePageTransactionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePageTransactionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePageTransactionResponse(val *PageTransactionResponse) *NullablePageTransactionResponse {
	return &NullablePageTransactionResponse{value: val, isSet: true}
}

func (v NullablePageTransactionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePageTransactionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


